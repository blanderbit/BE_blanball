on:
    workflow_dispatch:
        inputs:
            logLevel:
                description: 'Log level'
                required: true
                type: text
jobs:
    deploy_:
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@master
            - name: Set env vars (PROD)
              if: github.ref == 'refs/heads/master_test'
              run: |
                  echo "DOCKERFILE_PATH=Dockerfile" >> $GITHUB_ENV
                  echo "REGISTRY=${{ secrets.DOCKER_REGISTRY_TEST }}" >> $GITHUB_ENV
                  echo "WEBHOOK=${{ secrets.PORTAINER_WEBHOOK_URL_PROD }}" >> $GITHUB_ENV
                  echo "LATEST_IMAGE=${{ secrets.DOCKER_REGISTRY_PROD }}":latest >> $GITHUB_ENV
                  echo "COMMIT_IMAGE=${{ secrets.DOCKER_REGISTRY_PROD }}":${{ github.sha }} >> $GITHUB_ENV
            - name: Set env vars (TEST)
              if: github.ref != 'refs/heads/master_test'
              run: |
                  echo "DOCKERFILE_PATH=Dockerfile" >> $GITHUB_ENV
                  echo "WEBHOOK=${{ secrets.PORTAINER_WEBHOOK_URL_TEST }}" >> $GITHUB_ENV
                  echo "REGISTRY=${{ secrets.DOCKER_REGISTRY_TEST }}" >> $GITHUB_ENV
                  echo "LATEST_IMAGE=${{ secrets.DOCKER_REGISTRY_TEST }}":latest >> $GITHUB_ENV
                  echo "COMMIT_IMAGE=${{ secrets.DOCKER_REGISTRY_TEST }}":${{ github.sha }} >> $GITHUB_ENV
            - name: Login to GitHub Container Registry
              uses: docker/login-action@v2
              with:
                  registry: ${{ env.REGISTRY }}
                  username: ${{ secrets.REGISTRY_USERNAME }}
                  password: ${{ secrets.REGISTRY_PASSWORD }}

            - name: Pull latest image
              run: |
                  docker pull ${LATEST_IMAGE} --ignore-pull-failures || true
            - name: Build image
              working-directory: .
              run: |
                  docker build -f ${{ env.DOCKERFILE_PATH }} --cache-from ${{ env.LATEST_IMAGE }} -t ${{ env.COMMIT_IMAGE }}  .
            - name: Tag latest image
              run: |
                  docker tag ${{ env.COMMIT_IMAGE }} ${{ env.LATEST_IMAGE }}
            - name: Push images
              run: |
                  docker push ${{ env.COMMIT_IMAGE }}
                  docker push ${{ env.LATEST_IMAGE }}

            - name: Trigger deploy in portainer
              run: |
                  curl -X POST ${{ env.WEBHOOK }}
