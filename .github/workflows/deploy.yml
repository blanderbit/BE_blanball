name: deploy

on:
  workflow_run:
    workflows: ["Run tests"]
    types:
      - completed
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    needs: run_tests
    steps:
    - uses: actions/checkout@master
    - name: Set env vars (TEST)
      if: contains(fromJson('["push"]'), github.event_name) && github.ref == 'refs/heads/develop' || contains(fromJson('["workflow_dispatch"]'), github.event_name)
      run: |
        echo "API_DOCKERFILE_PATH=Dockerfile" >> $GITHUB_ENV
        echo "WEBHOOK=${{ secrets.PORTAINER_WEBHOOK_URL_TEST }}" >> $GITHUB_ENV
        echo "REGISTRY=${{ secrets.DOCKER_REGISTRY_TEST }}" >> $GITHUB_ENV
        echo "LATEST_IMAGE=${{ secrets.DOCKER_REGISTRY_TEST }}":latest >> $GITHUB_ENV
        echo "COMMIT_IMAGE=${{ secrets.DOCKER_REGISTRY_TEST }}":${{ github.sha }} >> $GITHUB_ENV
    - name: Set env vars (PROD)
      if: github.ref == 'refs/heads/main'
      run: |
        echo "API_DOCKERFILE_PATH=Dockerfile" >> $GITHUB_ENV
        echo "REGISTRY=${{ secrets.DOCKER_REGISTRY_PROD }}" >> $GITHUB_ENV
        echo "WEBHOOK=${{ secrets.PORTAINER_WEBHOOK_URL_PROD }}" >> $GITHUB_ENV
        echo "LATEST_IMAGE=${{ secrets.DOCKER_REGISTRY_PROD }}":latest >> $GITHUB_ENV
        echo "COMMIT_IMAGE=${{ secrets.DOCKER_REGISTRY_PROD }}":${{ github.sha }} >> $GITHUB_ENV
    - name: Login to GitHub Container Registry
      uses: docker/login-action@v2
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ secrets.REGISTRY_USERNAME }}
        password: ${{ secrets.REGISTRY_PASSWORD }}

    - name: Pull latest image (API)
      run: |
        docker pull ${{ env.LATEST_IMAGE }} --ignore-pull-failures || true
    - name: Build image (API)
      working-directory: .
      run: |
        docker build -f ${{ env.API_DOCKERFILE_PATH }} -t api --cache-from ${{ env.LATEST_IMAGE }} -t ${{ env.COMMIT_IMAGE }} .
    - name: Tag latest image (API)
      run: |
        docker tag ${{ env.COMMIT_IMAGE }} ${{ env.LATEST_IMAGE }} 
    - name: Push images (API)
      run: |
        docker push ${{ env.COMMIT_IMAGE }}
        docker push ${{ env.LATEST_IMAGE }}        
    - name: Trigger deploy in portainer
      run: |
        curl -X POST ${{ env.WEBHOOK }}