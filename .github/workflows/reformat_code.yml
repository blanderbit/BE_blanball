# Github workflow that runs on each push to any of the branches for auto code formatting.
# It uses such formatters as isort - sorting imports,
# black - formats according to pep8 and prettier standards - formats json, yaml, readme, etc.
# After formatting, a commit will be made to the branch in which the changes were pushed

name: Reformat code

on:
  push:

jobs:
  reformat-code:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
        with:
          token: ${{ secrets.AUTH_TOKEN }}

      - name: Cache node modules
        id: cache-npm
        uses: actions/cache@v3
        env:
          cache-name: cache-node-modules
        with:
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - name: Reformat code using black
        uses: psf/black@stable
        with:
          src: "."
          version: "~= 22.10.0"
      - name: Linting .env files 
        uses: wemake-services/dotenv-linter@master
      - name: Install isort
        run: pip install isort
      - name: Reformat code using isort
        run: isort --atomic .
      - name: Install prettier
        run: npm install
      - name: Reformat code using prettier
        run: npx prettier --write .
      - name: Commit files
        continue-on-error: true
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add .
          git commit -am "auto reformated code using: black, isort and prettier for branch ${{ github.ref_name }}"
          git tag ${{ steps.semantic_release_info.outputs.git_tag }}
      - name: Push changes
        uses: ad-m/github-push-action@v0.6.0
        with:
          branch: ${{ github.ref_name }}
          github_token: ${{ secrets.AUTH_TOKEN }}
