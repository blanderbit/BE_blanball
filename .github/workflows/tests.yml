name: tests

jobs:
  tests:
    runs-on: ubuntu-latest
    env:
      ENV_FILE: ${{ secrets.ENV_FILE }}
      PYTHON_VERSION: 3.10.7
      POETRY_VERSION: 1.2.0
    services:
      db:
        image: postgis/postgis:latest
        env:
          POSTGRES_USER: postgres_test
          POSTGRES_PASSWORD: postgres_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
      redis:
        image: redis:7.0.4-alpine
        ports:
          - 6379:6379
    steps:
    - uses: actions/checkout@master
    - name: Set up Python ${{ env.PYTHON_VERSION }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ env.PYTHON_VERSION }}
    - name: Install GDAL for geo django
      run: |
        sudo apt-get install -y gdal-bin libgdal-dev 
        sudo apt-get install -y python3-gdal 
        sudo apt-get install -y binutils libproj-dev
    - uses: actions/setup-python@v3
      with:
        python-version: ${{ env.PYTHON_VERSION }}
        cache: 'poetry'
    - name: Install poetry
      run: |
        pip install --upgrade pip
        pip install poetry==${{ env.POETRY_VERSION }}
      env:
        PATH: /root/.poetry/bin:/opt/venv/bin:${PATH}
    - name: Install deps
      run: |
        cd project
        poetry run pip install -U pip 
        poetry install
    - name: Run tests
      run: |
        echo $ENV_FILE | base64 --decode > .env
        cd project
        poetry run python3 manage.py migrate --noinput
        poetry run python3 manage.py test --no-input