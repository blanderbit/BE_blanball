name: build_proxy

on:
    pull_request:
        types: [closed]
        branches:
            - develop
            - main
    workflow_dispatch:

jobs:
    build_proxy:
        runs-on: ubuntu-latest
        if: github.event.pull_request.merged
        steps:
            - uses: actions/checkout@master
            - name: Set env vars (TEST)
              if: github.ref == 'refs/heads/develop'
              run: |
                  echo "PROXY_DOCKERFILE_PATH=nginx/Dockerfile" >> $GITHUB_ENV
                  echo "REGISTRY=${{ secrets.PROXY_REGISTRY_TEST }}" >> $GITHUB_ENV
                  echo "PROXY_LATEST_IMAGE=${{ secrets.PROXY_REGISTRY_TEST }}":latest >> $GITHUB_ENV
                  echo "PROXY_COMMIT_IMAGE=${{ secrets.PROXY_REGISTRY_TEST }}":${{ github.sha }} >> $GITHUB_ENV
            - name: Set env vars (PROD)
              if: github.ref == 'refs/heads/main'
              run: |
                  echo "PROXY_DOCKERFILE_PATH=nginx/Dockerfile" >> $GITHUB_ENV
                  echo "REGISTRY=${{ secrets.PROXY_REGISTRY_PROD }}" >> $GITHUB_ENV
                  echo "PROXY_LATEST_IMAGE=${{ secrets.PROXY_REGISTRY_PROD }}":latest >> $GITHUB_ENV
                  echo "PROXY_COMMIT_IMAGE=${{ secrets.PROXY_REGISTRY_PROD }}":${{ github.sha }}  >> $GITHUB_ENV
            - name: Login to GitHub Container Registry
              uses: docker/login-action@v2
              with:
                  registry: ${{ env.REGISTRY }}
                  username: ${{ secrets.REGISTRY_USERNAME }}
                  password: ${{ secrets.REGISTRY_PASSWORD }}

            - name: Pull latest image (PROXY)
              run: |
                  docker pull ${{ env.PROXY_LATEST_IMAGE }} --ignore-pull-failures || true
            - name: Build image (PROXY)
              working-directory: .
              run: |
                  docker build -f ${{ env.PROXY_DOCKERFILE_PATH}} -t proxy --cache-from ${{ env.PROXY_LATEST_IMAGE }} -t ${{ env.PROXY_COMMIT_IMAGE }} .
            - name: Tag latest image (PROXY)
              run: |
                  docker tag ${{ env.PROXY_COMMIT_IMAGE }} ${{ env.PROXY_LATEST_IMAGE }}
            - name: Push images (PROXY)
              run: |
                  docker push ${{ env.PROXY_COMMIT_IMAGE }}
                  docker push ${{ env.PROXY_LATEST_IMAGE }}
