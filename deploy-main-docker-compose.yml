version: '3.8'

x-blanball-api-common: &blanball-api-common
    image: registry.it-flumx.com/flumx_blanball_be_prod:latest

    env_file:
        - stack.env
    entrypoint: scripts/entrypoint.sh

    depends_on:
        blanball-db-prod:
            condition: service_healthy
        blanball-redis-prod:
            condition: service_healthy
    networks:
        - registry_default
        - blaball-network-prod

services:
    blanball-proxy-prod:
        container_name: blanball-proxy-prod
        env_file:
            - stack.env
        image: registry.it-flumx.com/blanball-proxy-prod:latest
        ports:
            - 49298:80
        networks:
            - registry_default
            - blaball-network-prod
        depends_on:
            blanball-api-prod:
                condition: service_started

    blanball-api-prod:
        <<: *blanball-api-common
        container_name: blanball-api-prod
        command: api-deploy
        expose:
            - '8000'
        labels:
            - 'traefik.enable=true'
            - 'traefik.http.routers.blanball-api-prod.rule=Host(`${BLANBALL_API_DOMAIN_NAME}`) && PathPrefix(`/api`)'
            - 'traefik.http.routers.blanball-api-prod.entrypoints=websecure'
            - 'traefik.http.routers.blanball-api-prod.tls.certresolver=myresolver'
            - 'traefik.http.routers.blanball-api-prod.service=blanball-api-prod'
            - 'traefik.http.services.blanball-api-prod.loadbalancer.server.port=8000'

    blanball-daphne-prod:
        <<: *blanball-api-common
        container_name: blanball-daphne-prod
        command: daphne
        expose:
            - '10000'
        labels:
            - 'traefik.enable=true'
            - 'traefik.http.routers.blanball-daphne-prod.rule=Host(`${BLANBALL_WS_DOMAIN_NAME}`) && PathPrefix(`/ws`)'
            - 'traefik.http.routers.blanball-daphne-prod.entrypoints=websecure'
            - 'traefik.http.routers.blanball-daphne-prod.tls.certresolver=myresolver'
            - 'traefik.http.routers.blanball-daphne-prod.service=blanball-daphne-prod'
            - 'traefik.http.services.blanball-daphne-prod.loadbalancer.server.port=10000'

    blanball-celery-worker-prod:
        <<: *blanball-api-common
        container_name: blanball-celery-worker-prod
        command: celery-worker

    blanball-celery-beat-prod:
        <<: *blanball-api-common
        container_name: blanball-celery-beat-prod
        command: celery-beat

    blanball-db-prod:
        container_name: blanball-db-prod
        env_file:
            - stack.env
        image: postgis/postgis:latest
        restart: always
        volumes:
            - db-data-prod:/var/lib/postgresql/data
        networks:
            - registry_default
            - blaball-network-prod
        healthcheck:
            test: pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}
            timeout: 5s
            retries: 20

    blanball-redis-prod:
        container_name: blanball-redis-prod
        env_file:
            - stack.env
        image: redis:latest
        restart: always
        volumes:
            - redis-data-prod:/usr/src/blanball/storage/redis-prod/data
        networks:
            - registry_default
            - blaball-network-prod
        healthcheck:
            test: ['CMD-SHELL', 'redis-cli ping | grep PONG']
            timeout: 3s
            retries: 5

    blanball-pgadmin-prod:
        container_name: blanball-pgadmin-prod
        env_file:
            - stack.env
        image: dpage/pgadmin4:latest
        restart: always
        volumes:
            - pgadmin-data-prod:/usr/src/blanball/storage/pgadmin-prod/data
        networks:
            - registry_default
            - blaball-network-prod
        ports:
            - 49283:${PGADMIN_LISTEN_PORT}
    blanball-minio-prod:
        container_name: blanball-minio-prod
        image: minio/minio
        volumes:
            - minio-data-prod:/minio-data-prod
        command: server --console-address ":9001" /minio-data-prod
        expose:
            - '9000'
            - '9001'
        env_file:
            - stack.env
        labels:
            - 'traefik.enable=true'
            # Console
            - 'traefik.http.routers.minio-console.rule=Host(`${BLANBALL_STORAGE_CONSOLE_DOMAIN_NAME}`)'
            - 'traefik.http.routers.minio-console.entrypoints=websecure'
            - 'traefik.http.routers.minio-console.tls.certresolver=myresolver'
            - 'traefik.http.routers.minio-console.service=minio-console'
            - 'traefik.http.services.minio-console.loadbalancer.server.port=9001'
            # APi
            - 'traefik.http.routers.blanball-minio-prod.rule=Host(`${BLANBALL_STORAGE_API_DOMAIN_NAME}`)'
            - 'traefik.http.routers.blanball-minio-prod.entrypoints=websecure'
            - 'traefik.http.routers.blanball-minio-prod.tls.certresolver=myresolver'
            - 'traefik.http.routers.blanball-minio-prod.service=blanball-minio-prod'
            - 'traefik.http.services.blanball-minio-prod.loadbalancer.server.port=9000'
        networks:
            - blaball-network-prod
            - registry_default

networks:
    registry_default:
        external: true
    blaball-network-prod:
        name: blaball-network-prod

volumes:
    redis-data-prod:
    pgadmin-data-prod:
    db-backup-data-prod:
    minio-data-prod:
    db-data-prod:
