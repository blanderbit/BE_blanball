version: "3.8"

services: 

  db:
    container_name: db
    env_file: 
      - stack.env
    image: postgres:latest
    restart: always
    volumes:
      - ./postgres-data:/var/lib/postgresql/data
    networks:
      - app-network
    healthcheck:
      test: pg_isready -U postgres -d postgres
      timeout: 5s
      retries: 20
      
  api:
    container_name: api
    env_file: 
      - stack.env
    image: registry.it-flumx.com/flumx_te_blanball_be_test:latest
    user: deploy
    entrypoint: compose/entrypoint.sh
    restart: always
    command: api-deploy
    ports:
      - 49200:8000
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - app-network    
    links:
     - redis

  proxy:
    container_name: proxy
    env_file: 
      - stack.env
    image: registry.it-flumx.com/blanball-proxy:latest
    restart: always
    ports:
      - 49299:80
    networks:
      - app-network
    depends_on:
      api:
        condition: service_started

  daphne:
    container_name: daphne
    env_file: 
      - stack.env
    image: registry.it-flumx.com/flumx_te_blanball_be_test:latest
    user: deploy
    restart: always
    entrypoint: compose/entrypoint.sh
    command: daphne
    ports:
      - 49290:9000
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - app-network    
    links:
     - redis

  redis:
    container_name: redis
    env_file: 
      - stack.env
    image: redis:latest
    restart: always
    volumes:
      - redis-data:/usr/src/blanball/storage/redis/data
    networks:
      - app-network  
    healthcheck:
      test: ["CMD-SHELL", "redis-cli ping | grep PONG"]
      timeout: 3s
      retries: 5

  celery-worker:
    env_file: 
      - stack.env
    container_name: celery-worker
    image: registry.it-flumx.com/flumx_te_blanball_be_test:latest
    user: deploy
    restart: always
    entrypoint: compose/entrypoint.sh
    command: celery-worker
    networks:
      - app-network  
    depends_on:
      redis:
        condition: service_healthy

  celery-beat:
    container_name: celery-beat
    env_file: 
      - stack.env
    image: registry.it-flumx.com/flumx_te_blanball_be_test:latest
    user: deploy
    restart: always 
    entrypoint: compose/entrypoint.sh
    command: celery-beat
    networks:
      - app-network
    depends_on:
      redis:
        condition: service_healthy

  pgadmin:
    container_name: pgadmin
    env_file: 
      - stack.env
    image: dpage/pgadmin4
    restart: always
    volumes:
      - pgadmin-data:/usr/src/blanball/storage/pgadmin/data
    networks:
      - app-network
    ports:
      - 49280:80

  db_backup:
    container_name: db_backup
    env_file: 
      - stack.env
    image: prodrigestivill/postgres-backup-local
    restart: always
    volumes:
      - db-backup-data:/usr/src/blanball/storage/db-backup/data
    networks:
      - app-network
    depends_on:
      db:
        condition: service_started

  ftp-server:
    env_file: 
      - stack.env
    container_name: ftp-server
    image: garethflowers/ftp-server
    restart: always
    ports:
      - '49221:21/tcp'
    volumes:
      - ftp-server-data:/home/user
    networks:
      - app-network
    
networks:
  app-network:
    driver: bridge    
     
volumes:
  redis-data:
  pgadmin-data:
  db-backup-data:
  ftp-server-data:

