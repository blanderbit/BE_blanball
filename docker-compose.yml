version: '3.8'

x-blanball-api-common-dev: &blanball-api-common-dev
    env_file:
        - .env
    entrypoint: scripts/entrypoint.sh
    build:
        context: .
        dockerfile: Dockerfile
    volumes:
        - .:/usr/src/blanball
    networks:
        - blaball-network-dev
        - test-chat-network
    depends_on:
        blanball-db-dev:
            condition: service_healthy
        blanball-redis-dev:
            condition: service_healthy

services:
    blanball-db-dev:
        container_name: blanball-db-dev
        env_file:
            - .env
        image: postgis/postgis:latest
        volumes:
            - ./postgres-data:/var/lib/postgresql/data
        networks:
            - blaball-network-dev
            - test-chat-network
        healthcheck:
            test: pg_isready -U postgres -d postgres
            timeout: 5s
            retries: 20

    blanball-redis-dev:
        container_name: blanball-redis-dev
        env_file:
            - .env
        image: redis:7.0.4-alpine
        volumes:
            - redis-data:/usr/src/blanball/storage/redis/data
        networks:
            - blaball-network-dev
            - test-chat-network
        healthcheck:
            test: ['CMD-SHELL', 'redis-cli ping | grep PONG']
            timeout: 5s
            retries: 20

    blanball-api-dev:
        <<: *blanball-api-common-dev
        container_name: blanball-api-dev
        command: api
        ports:
            - 8000:8000

    blanball-daphne-dev:
        <<: *blanball-api-common-dev
        container_name: blanball-daphne-dev
        command: daphne
        ports:
            - 10000:10000

    blanball-celery-worker-dev:
        <<: *blanball-api-common-dev
        container_name: blanball-celery-worker-dev
        command: celery-worker

    blanball-celery-beat-dev:
        <<: *blanball-api-common-dev
        container_name: blanball-celery-beat-dev
        command: celery-beat

    blanball-minio-dev:
        container_name: blanball-minio-dev
        env_file:
            - .env
        image: minio/minio
        volumes:
            - minio-data:/minio-data
        command: 'minio server /minio-data --console-address ":9001"'
        ports:
            - 9000:9000
            - 9001:9001
        healthcheck:
            test:
                ['CMD', 'curl', '-f', 'http://localhost:9000/minio/health/live']
            interval: 30s
            timeout: 20s
            retries: 3
        networks:
            - blaball-network-dev
            - test-chat-network
    blanball-pgadmin-dev:
        container_name: blanball-pgadmin-dev
        env_file:
            - .env
        image: dpage/pgadmin4:latest
        restart: always
        volumes:
            - pgadmin-data:/usr/src/blanball/storage/pgadmin/data
        networks:
            - blaball-network-dev
            - test-chat-network
        ports:
            - 49280:49299

    blanball-kafka-dev:
        container_name: blanball-kafka-dev
        env_file:
            - .env
        image: confluentinc/cp-kafka:latest
        depends_on:
            - blanball-zookeeper-dev
        ports:
            - 9092:9092
            - 9093:9093
        restart: always
        volumes:
            - kafka-data:/usr/src/blanball/storage/kafka/data
        networks:
            - blaball-network-dev
            - test-chat-network

    blanball-zookeeper-dev:
        container_name: blanball-zookeeper-dev
        env_file:
            - .env
        image: zookeeper:latest
        ports:
            - 2181:2181
        restart: always
        volumes:
            - zookeeper-data:/usr/src/blanball/storage/zookeeper/data \
            - zookeeper-logs-data:/usr/src/blanball/storage/zookeeper-logs/data \
        networks:
            - blaball-network-dev
            - test-chat-network

networks:
    blaball-network-dev:
        name: blaball-network-dev
    test-chat-network:
      external:
        name: test-chat-network

volumes:
    redis-data:
    minio-data:
    pgadmin-data:
    kafka-data:
    zookeeper-data:
    zookeeper-logs-data:
