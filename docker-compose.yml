version: "3.8"
# command: uwsgi --ini uwsgi.ini
services:
  db:
    container_name: db
    env_file: 
      - ./compose/.env
    image: postgres:latest
    volumes:
      - ./postgres-data:/var/lib/postgresql/data
    networks:
      - app-network
    ports: 
      - 5432:5432
    healthcheck:
      test: pg_isready -U postgres -d postgres
      timeout: 5s
      retries: 20
  api:
    container_name: api
    env_file: 
      - ./compose/.env
    command: bash compose/local/django-start.sh
    build: .
    volumes:
      - .:/usr/src/blanball
    networks:
      - app-network
    ports: 
      - 8000:8000
    depends_on:
      db: 
        condition: service_healthy
      redis: 
        condition: service_healthy
    links: 
      - redis
  nginx:
    container_name: nginx
    image: nginx:latest
    ports:
      - 1337:81
    networks:
      - app-network
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
  redis:
    container_name: redis
    env_file:
      - ./compose/.env
    image: redis:7.0.4-alpine
    volumes: 
      - redis-data:/usr/src/blanball/storage/redis/data
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "redis-cli ping | grep PONG"]
      timeout: 5s
      retries: 20
  celery-worker: 
    container_name: celery-worker
    env_file: 
      - ./compose/.env
    command: bash compose/local/celery-worker-start.sh
    build: .
    volumes: 
      - .:/usr/src/blanball
    networks:
      - app-network
    depends_on:
      db:
        condition: service_started
      api:
        condition: service_started
  celery-beat:
    container_name: celery-beat
    env_file: 
      - ./compose/.env 
    command: bash compose/local/celery-beat-start.sh
    build: .
    volumes: 
      - .:/usr/src/blanball
    networks:
      - app-network
    depends_on:
      db:
        condition: service_started
      api:
        condition: service_started  
  pgadmin:
    container_name: pgadmin
    env_file: 
      - ./compose/.env
    image: dpage/pgadmin4
    volumes:
      - pgadmin-data:/usr/src/blanball/storage/pgadmin/data
    networks:
      - app-network
    ports:
      - 5050:80
    
  db-backup:
    container_name: db-backup
    env_file: 
      - ./compose/.env
    image: prodrigestivill/postgres-backup-local
    restart: always
    volumes:
      - ./backup:/backups
    networks:
      - app-network
    depends_on:
      db:
        condition: service_started
  ftp-server:
    container_name: ftp-server
    env_file: 
      - ./compose/.env
    image: garethflowers/ftp-server
    ports:
      - 21:21/tcp
    volumes:
      - ftp-server-data:/home/user
    networks:
      - app-network
      
networks:
  app-network:
    driver: bridge

volumes:
  redis-data:
  pgadmin-data:
  ftp-server-data:
